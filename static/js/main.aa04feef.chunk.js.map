{"version":3,"sources":["constants.js","Chart/spline.js","Chart/index.js","App.js","index.js"],"names":["h","Math","PI","points","f","x","sin","sqrt","func","n","length","i","push","y","a","b","c","d","m","coeffs","s","t","getPointsOfPolynomial","index","res","round","pow","spline","colors","color","Chart","maxDomain","minDomain","theme","VictoryTheme","material","containerComponent","responsive","width","height","orientation","gutter","itemsPerRow","data","name","symbol","fill","labels","animate","duration","style","stroke","map","item","delay","App","display","alignItems","flexDirection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAaA,EAAIC,KAAKC,GAAK,EAEdC,EAAS,CAAC,EAAG,GAAMH,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,EAAIA,GCA3E,SAASI,EAAEC,GACP,OAAQJ,KAAKK,IAAID,GAAKJ,KAAKM,KAAKF,GAAK,EAMzC,IAHO,IAAMG,EAAO,GACdC,EAAIN,EAAOO,OAERC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIN,EAAIM,EAAI,GACZH,EAAKI,KAAK,CACNP,EAAGA,EACHQ,EAAGT,EAAEC,KAcb,IAVA,IAAML,EAAI,CAAC,GAILc,EAAI,CAAC,GACLC,EAAI,CAAC,GACLC,EAAI,CAAC,GACLC,EAAI,CAAC,GAGFN,EAAI,EAAGA,EAAIF,EAAGE,IACnBX,EAAEW,GAAKR,EAAOQ,GAAKR,EAAOQ,EAAI,GAKlC,IAAK,IAAIA,EAAI,EAAGA,EAAKF,EAAI,EAAIE,IACzBG,EAAEH,GAAKX,EAAEW,IAAMX,EAAEW,GAAKX,EAAEW,EAAI,IAGhC,IAAK,IAAIA,EAAI,EAAGA,EAAKF,EAAI,EAAIE,IACzBI,EAAEJ,IAAM,EAGZ,IAAK,IAAIA,EAAI,EAAGA,EAAKF,EAAI,EAAIE,IACzBK,EAAEL,GAAKX,EAAEW,EAAI,IAAMX,EAAEW,GAAKX,EAAEW,EAAI,IAGpC,IAAK,IAAIA,EAAI,EAAGA,EAAKF,EAAI,EAAIE,IACzBM,EAAEN,GAAK,IAAMP,EAAED,EAAOQ,EAAI,IAAMP,EAAED,EAAOQ,KAAOX,EAAEW,EAAI,IAAMP,EAAED,EAAOQ,IAAMP,EAAED,EAAOQ,EAAI,KAAOX,EAAEW,KAAOR,EAAOQ,EAAI,GAAKR,EAAOQ,EAAI,IAQvI,IAHA,IAAIO,EAAI,CAAC,GACHC,EAAS,CAAC,CAAEC,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAGJ,EAAE,GAAKD,EAAE,GAAIM,GAAIJ,EAAE,GAAKF,EAAE,KAEtDJ,EAAI,EAAGA,EAAKF,EAAI,EAAIE,IACzBQ,EAAOR,GAAK,CACRS,EAAGJ,EAAEL,IAAMI,EAAEJ,GAAKQ,EAAOR,EAAI,GAAGS,GAChCC,GAAIP,EAAEH,GAAKQ,EAAOR,EAAI,GAAGU,EAAIJ,EAAEN,KAAOI,EAAEJ,GAAKQ,EAAOR,EAAI,GAAGS,EAAIN,EAAEH,KAMzE,IAAK,IAAIA,EAAIF,EAAI,EAAGE,EAAI,EAAGA,IACnBA,IAAMF,EAAI,GACVS,EAAEP,EAAI,GAAK,EACXO,EAAEP,GAAKQ,EAAOR,GAAGU,GAGjBH,EAAEP,GAAKQ,EAAOR,GAAGS,EAAIF,EAAEP,EAAI,GAAKQ,EAAOR,GAAGU,EAelD,SAASC,EAAsBC,GAE3B,IADA,IAVqBlB,EAAGM,EAUlBa,EAAM,GACHb,EAAIV,KAAKwB,MAA0B,GAApBtB,EAAOoB,EAAQ,IAAUZ,GAAKV,KAAKwB,MAAsB,GAAhBtB,EAAOoB,IAAcZ,IAAK,CACvF,IAAIN,EAAIM,EAAI,GACZa,EAAIZ,KAAK,CACLP,EAAGA,EACHQ,GAfaR,EAeMA,EAfHM,EAeMY,EAbzBL,EAAEP,EAAI,GAAKV,KAAKyB,IAAIvB,EAAOQ,GAAKN,EAAG,IAAO,EAAIL,EAAEW,IAChDO,EAAEP,GAAKV,KAAKyB,KAAKvB,EAAOQ,EAAI,GAAKN,EAAG,IAAO,EAAIL,EAAEW,KACjDP,EAAED,EAAOQ,EAAI,IAAMO,EAAEP,EAAI,GAAKX,EAAEW,GAAKX,EAAEW,GAAK,KAAOR,EAAOQ,GAAKN,GAAKL,EAAEW,KACtEP,EAAED,EAAOQ,IAAMO,EAAEP,GAAKX,EAAEW,GAAKX,EAAEW,GAAK,MAAQR,EAAOQ,EAAI,GAAKN,GAAKL,EAAEW,OAaxE,OAAOa,EAQX,IALO,IAAMG,EAAS,GAEhBC,EAAS,CAAC,UACZ,WAEKjB,EAAI,EAAGA,EAAIF,EAAGE,IACnBgB,EAAOf,KAAK,CACRiB,MAAOD,EAAOjB,EAAI,GAClBR,OAAQmB,EAAsBX,KCjDvBmB,MAnDf,WAEI,OAAQ,kBAAC,WAAD,KACJ,kBAAC,IAAD,CACIC,UAAY,CAAE1B,EAAG,EAAGQ,EAAG,GACvBmB,UAAY,CAAE3B,GAAI,EAAGQ,GAAI,GACzBoB,MAAQC,IAAaC,SACrBC,mBAAqB,kBAAC,IAAD,CAAkBC,YAAa,IACpDC,MAAQ,IACRC,OAAS,KACT,kBAAC,IAAD,CAAelC,EAAI,IAAMQ,EAAI,GACd2B,YAAY,aACZC,OAAS,GACTC,YAAa,EACbC,KAAO,CACH,CACIC,KAAM,+BACNC,OAAQ,CAAEC,KAAM,UAChBC,OAAQ,CAAED,KAAM,WAEpB,CACIF,KAAM,sBACNC,OAAQ,CAAEC,KAAM,UAChBC,OAAQ,CAAED,KAAM,WAEpB,CACIF,KAAM,+BACNC,OAAQ,CAAEC,KAAM,UAChBC,OAAQ,CAAED,KAAM,cAIvC,kBAAC,IAAD,CAAaH,KAAOnC,EACPwC,QAAU,CAAEC,SAAU,MACtBC,MAAQ,CACJP,KAAM,CACFQ,OAAQ,cAG5BxB,EAAOyB,KAAI,SAACC,GAAD,OAAW,kBAAC,IAAD,CAAaV,KAAOU,EAAKlD,OACZ6C,QAAU,CAAEC,SAAU,KAAMK,MAAO,KACnCJ,MAAQ,CACJP,KAAM,CACFQ,OAAQE,EAAKxB,gBCtCtD0B,MANf,WACI,OAAQ,yBAAKL,MAAQ,CAAEM,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACzE,kBAAC,EAAD,QCDRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.aa04feef.chunk.js","sourcesContent":["export const h = Math.PI / 7\r\n\r\nexport const points = [0, 0.5 * h, 1.5 * h, 2.5 * h, 4.5 * h, 6.5 * h, 7 * h]","import { points } from '../constants'\r\n\r\nfunction f(x) {\r\n    return (Math.sin(x) * Math.sqrt(x) + 1)\r\n}\r\n\r\nexport const func = []\r\nconst n = points.length\r\n\r\nfor (let i = 0; i < 128; i++) {\r\n    let x = i / 20\r\n    func.push({\r\n        x: x,\r\n        y: f(x)\r\n    })\r\n}\r\n\r\nconst h = [0]\r\n\r\n//коэффициенты для матрицы под прогонку\r\n\r\nconst a = [0]\r\nconst b = [0]\r\nconst c = [0]\r\nconst d = [0]\r\n\r\n\r\nfor (let i = 1; i < n; i++) {\r\n    h[i] = points[i] - points[i - 1]\r\n}\r\n\r\n//нахождение коэффициентов уравнений для алгоритма прогонки\r\n\r\nfor (let i = 1; i < (n - 1); i++) {\r\n    a[i] = h[i] / (h[i] + h[i + 1])\r\n}\r\n\r\nfor (let i = 1; i < (n - 1); i++) {\r\n    b[i] = -2\r\n}\r\n\r\nfor (let i = 1; i < (n - 1); i++) {\r\n    c[i] = h[i + 1] / (h[i] + h[i + 1])\r\n}\r\n\r\nfor (let i = 1; i < (n - 1); i++) {\r\n    d[i] = 6 * ((f(points[i + 1]) - f(points[i])) / h[i + 1] - (f(points[i]) - f(points[i - 1])) / h[i]) / (points[i + 1] - points[i - 1])\r\n}\r\n\r\n//начало прогонки, нахождение коэффициентов линейной зависимости корней\r\n\r\nlet m = [0]\r\nconst coeffs = [{ s: 0, t: 0 }, { s: c[1] / b[1], t: -d[1] / b[1] }]\r\n\r\nfor (let i = 2; i < (n - 1); i++) {\r\n    coeffs[i] = {\r\n        s: c[i] / (b[i] - coeffs[i - 1].s),\r\n        t: (a[i] * coeffs[i - 1].t - d[i]) / (b[i] - coeffs[i - 1].s * a[i])\r\n    }\r\n}\r\n\r\n//нахождение корней, прогонка в обратном направлении\r\n\r\nfor (let i = n - 2; i > 0; i--) {\r\n    if (i === n - 2) {\r\n        m[i + 1] = 0\r\n        m[i] = coeffs[i].t\r\n    }\r\n    else {\r\n        m[i] = coeffs[i].s * m[i + 1] + coeffs[i].t\r\n    }\r\n}\r\n\r\nexport const test = []\r\n\r\nfunction cubicPolynomial(x, i) { //i = 1,2 ... n\r\n    return (\r\n        (m[i - 1] * Math.pow(points[i] - x, 3)) / (6 * h[i]) +\r\n        (m[i] * Math.pow(-points[i - 1] + x, 3)) / (6 * h[i]) +\r\n        (f(points[i - 1]) - m[i - 1] * h[i] * h[i] / 6) * ((points[i] - x) / h[i]) +\r\n        (f(points[i]) - m[i] * h[i] * h[i] / 6) * ((-points[i - 1] + x) / h[i])\r\n    )\r\n}\r\n\r\nfunction getPointsOfPolynomial(index) {\r\n    const res = []\r\n    for (let i = Math.round(points[index - 1] * 20); i <= Math.round(points[index] * 20); i++) {\r\n        let x = i / 20\r\n        res.push({\r\n            x: x,\r\n            y: cubicPolynomial(x, index)\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nexport const spline = []\r\n\r\nconst colors = ['#4256b1',\r\n    '#10e300']\r\n\r\nfor (let i = 1; i < n; i++) {\r\n    spline.push({\r\n        color: colors[i % 2],\r\n        points: getPointsOfPolynomial(i)\r\n    })\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { VictoryChart, VictoryLine, VictoryTheme, VictoryContainer, VictoryLegend } from 'victory'\r\nimport { func, spline } from './spline'\r\n\r\nfunction Chart() {\r\n\r\n    return (<Fragment>\r\n        <VictoryChart\r\n            maxDomain={ { x: 7, y: 4 } }\r\n            minDomain={ { x: -1, y: -4 } }\r\n            theme={ VictoryTheme.material }\r\n            containerComponent={ <VictoryContainer responsive={ false }/> }\r\n            width={ 800 }\r\n            height={ 800 }>\r\n            <VictoryLegend x={ 200 } y={ 50 }\r\n                           orientation=\"horizontal\"\r\n                           gutter={ 20 }\r\n                           itemsPerRow={2}\r\n                           data={ [\r\n                               {\r\n                                   name: 'Graph of a spline polynomial',\r\n                                   symbol: { fill: '4256b1' },\r\n                                   labels: { fill: '4256b1' }\r\n                               },\r\n                               {\r\n                                   name: 'Graph of a function',\r\n                                   symbol: { fill: 'd00f50' },\r\n                                   labels: { fill: 'd00f50' }\r\n                               },\r\n                               {\r\n                                   name: 'Graph of a spline polynomial',\r\n                                   symbol: { fill: '10e300' },\r\n                                   labels: { fill: '10e300' }\r\n                               }\r\n                           ] }\r\n            />\r\n            <VictoryLine data={ func }\r\n                         animate={ { duration: 1500 } }\r\n                         style={ {\r\n                             data: {\r\n                                 stroke: '#d00f50'\r\n                             }\r\n                         } }/>\r\n            {spline.map((item) => (<VictoryLine data={ item.points }\r\n                                                animate={ { duration: 1500, delay: 1000 } }\r\n                                                style={ {\r\n                                                    data: {\r\n                                                        stroke: item.color\r\n                                                    }\r\n                                                } }/>))}\r\n\r\n        </VictoryChart>\r\n    </Fragment>)\r\n}\r\n\r\nexport default Chart","import React from 'react'\nimport Chart from './Chart'\n\nfunction App() {\n    return (<div style={ { display: 'flex', alignItems: 'center', flexDirection: 'column' } }>\n        <Chart/>\n    </div>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}